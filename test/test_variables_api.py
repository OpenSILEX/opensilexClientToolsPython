# coding: utf-8

"""
    OpenSilex API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.4.8
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import opensilexClientToolsPython
from opensilexClientToolsPython.api.variables_api import VariablesApi  # noqa: E501
from opensilexClientToolsPython.rest import ApiException


class TestVariablesApi(unittest.TestCase):
    """VariablesApi unit test stubs"""

    def setUp(self):
        self.api = opensilexClientToolsPython.api.variables_api.VariablesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_classic_export_variable_by_uris(self):
        """Test case for classic_export_variable_by_uris

        export variable by list of uris  # noqa: E501
        """
        pass

    def test_copy_from_shared_resource_instance(self):
        """Test case for copy_from_shared_resource_instance

        Copy the selected variables from the shared resource instance  # noqa: E501
        """
        pass

    def test_create_characteristic(self):
        """Test case for create_characteristic

        Add a characteristic  # noqa: E501
        """
        pass

    def test_create_entity(self):
        """Test case for create_entity

        Add an entity  # noqa: E501
        """
        pass

    def test_create_interest_entity(self):
        """Test case for create_interest_entity

        Add an entity of interest  # noqa: E501
        """
        pass

    def test_create_method(self):
        """Test case for create_method

        Add a method  # noqa: E501
        """
        pass

    def test_create_unit(self):
        """Test case for create_unit

        Add an unit  # noqa: E501
        """
        pass

    def test_create_variable(self):
        """Test case for create_variable

        Add a variable  # noqa: E501
        """
        pass

    def test_create_variables_group(self):
        """Test case for create_variables_group

        Add a variables group  # noqa: E501
        """
        pass

    def test_delete_characteristic(self):
        """Test case for delete_characteristic

        Delete a characteristic  # noqa: E501
        """
        pass

    def test_delete_entity(self):
        """Test case for delete_entity

        Delete an entity  # noqa: E501
        """
        pass

    def test_delete_interest_entity(self):
        """Test case for delete_interest_entity

        Delete an entity of interest  # noqa: E501
        """
        pass

    def test_delete_method(self):
        """Test case for delete_method

        Delete a method  # noqa: E501
        """
        pass

    def test_delete_unit(self):
        """Test case for delete_unit

        Delete an unit  # noqa: E501
        """
        pass

    def test_delete_variable(self):
        """Test case for delete_variable

        Delete a variable  # noqa: E501
        """
        pass

    def test_delete_variables_group(self):
        """Test case for delete_variables_group

        Delete a variables group  # noqa: E501
        """
        pass

    def test_details_export_variable_by_uris(self):
        """Test case for details_export_variable_by_uris

        export detailed variable by list of uris  # noqa: E501
        """
        pass

    def test_get_characteristic(self):
        """Test case for get_characteristic

        Get a characteristic  # noqa: E501
        """
        pass

    def test_get_characteristics_by_uris(self):
        """Test case for get_characteristics_by_uris

        Get detailed characteristics by uris  # noqa: E501
        """
        pass

    def test_get_datatypes(self):
        """Test case for get_datatypes

        Get variables datatypes  # noqa: E501
        """
        pass

    def test_get_entities_by_uris(self):
        """Test case for get_entities_by_uris

        Get detailed entities by uris  # noqa: E501
        """
        pass

    def test_get_entity(self):
        """Test case for get_entity

        Get an entity  # noqa: E501
        """
        pass

    def test_get_interest_entities_by_uris(self):
        """Test case for get_interest_entities_by_uris

        Get detailed entities of interest by uris  # noqa: E501
        """
        pass

    def test_get_interest_entity(self):
        """Test case for get_interest_entity

        Get an entity of interest  # noqa: E501
        """
        pass

    def test_get_method(self):
        """Test case for get_method

        Get a method  # noqa: E501
        """
        pass

    def test_get_methods_by_uris(self):
        """Test case for get_methods_by_uris

        Get detailed methods by uris  # noqa: E501
        """
        pass

    def test_get_unit(self):
        """Test case for get_unit

        Get an unit  # noqa: E501
        """
        pass

    def test_get_units_by_uris(self):
        """Test case for get_units_by_uris

        Get detailed units by uris  # noqa: E501
        """
        pass

    def test_get_variable(self):
        """Test case for get_variable

        Get a variable  # noqa: E501
        """
        pass

    def test_get_variables_by_uris(self):
        """Test case for get_variables_by_uris

        Get detailed variables by uris  # noqa: E501
        """
        pass

    def test_get_variables_group(self):
        """Test case for get_variables_group

        Get a variables group  # noqa: E501
        """
        pass

    def test_get_variables_group_by_uris(self):
        """Test case for get_variables_group_by_uris

        Get variables groups by their URIs  # noqa: E501
        """
        pass

    def test_search_characteristics(self):
        """Test case for search_characteristics

        Search characteristics by name  # noqa: E501
        """
        pass

    def test_search_entities(self):
        """Test case for search_entities

        Search entities by name  # noqa: E501
        """
        pass

    def test_search_interest_entity(self):
        """Test case for search_interest_entity

        Search entities of interest by name  # noqa: E501
        """
        pass

    def test_search_methods(self):
        """Test case for search_methods

        Search methods by name  # noqa: E501
        """
        pass

    def test_search_units(self):
        """Test case for search_units

        Search units by name  # noqa: E501
        """
        pass

    def test_search_variables(self):
        """Test case for search_variables

        Search variables  # noqa: E501
        """
        pass

    def test_search_variables_details(self):
        """Test case for search_variables_details

        Search detailed variables by name, long name, entity, characteristic, method or unit name  # noqa: E501
        """
        pass

    def test_search_variables_groups(self):
        """Test case for search_variables_groups

        Search variables groups  # noqa: E501
        """
        pass

    def test_update_characteristic(self):
        """Test case for update_characteristic

        Update a characteristic  # noqa: E501
        """
        pass

    def test_update_entity(self):
        """Test case for update_entity

        Update an entity  # noqa: E501
        """
        pass

    def test_update_interest_entity(self):
        """Test case for update_interest_entity

        Update an entity of interest  # noqa: E501
        """
        pass

    def test_update_method(self):
        """Test case for update_method

        Update a method  # noqa: E501
        """
        pass

    def test_update_unit(self):
        """Test case for update_unit

        Update an unit  # noqa: E501
        """
        pass

    def test_update_variable(self):
        """Test case for update_variable

        Update a variable  # noqa: E501
        """
        pass

    def test_update_variables_group(self):
        """Test case for update_variables_group

        Update a variables group  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
